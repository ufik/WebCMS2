<?php

/**
 * My Application bootstrap file.
 * Rev. 6
 */
use Nette\Application\Routers\Route;

if (!empty($_GET['redirectTo'])) {
    $_SERVER['REQUEST_URI'] = $_GET['redirectTo'];
}

// Load Nette Framework
require LIBS_DIR . '/autoload.php';

$config = file_get_contents(__DIR__ . '/config/config.neon');
$neon = new Nette\Utils\Neon;
$c = $neon->decode($config);

if (array_key_exists('facebookAppId', $c['common']['parameters']) && array_key_exists('facebookAppSecret', $c['common']['parameters'])) {
    Facebook\FacebookSession::setDefaultApplication($c['common']['parameters']['facebookAppId'], $c['common']['parameters']['facebookAppSecret']);
    $session = new Facebook\FacebookCanvasLoginHelper();

    $sr = $session->getSignedRequest();
    if ($sr) {
        $payload = $sr->getPayload();
        
        if (is_array($payload) && array_key_exists('app_data', $payload)) {
	    $_SERVER['REQUEST_URI'] = $payload['app_data'];
	}
    }
}

if (array_key_exists('productionServers', $c['common']['parameters'])) {
	$productionServers = $c['common']['parameters']['productionServers'];	
} else {
	$productionServers[] = 'vm7050'; // compatibility with old config files
}

// Configure application
$configurator = new Nette\Config\Configurator;

// detects environment via virtual server name
if(PHP_SAPI === 'cli'){
	if(in_array(php_uname('n'), $productionServers)){
		$environment = 'production';
	}else{
		$environment = 'development';
	}
}else{
	$environment = NULL;
}

// Enable Nette Debugger for error visualisation & logging
$configurator->enableDebugger(__DIR__ . '/../log');

// Enable RobotLoader - this will load all classes automatically
$configurator->setTempDirectory(__DIR__ . '/../temp');
$configurator->createRobotLoader()
	->addDirectory(APP_DIR)
	->register();

// Create Dependency Injection container from config.neon file
if(!$environment){
	$configurator->addConfig(__DIR__ . '/config/config.neon');
	$configurator->addConfig(LIBS_DIR . '/webcms2/webcms2/config.neon');
}
else{
	$configurator->addConfig(__DIR__ . '/config/config.neon', $environment);
	$configurator->addConfig(LIBS_DIR . '/webcms2/webcms2/config.neon', $environment);
}

\Nella\Console\Config\Extension::register($configurator);
\Nella\Doctrine\Config\Extension::register($configurator);
\Nella\Doctrine\Config\GedmoExtension::register($configurator);

$container = $configurator->createContainer();

// Setup router
$container->router[] =  new Route('', array(
	'module' => 'Frontend',
	'presenter' => 'Homepage',
	'action' => 'default'
));

if (array_key_exists('securedAdmin', $c['common']['parameters'])) {
    $securedAdmin = $c['common']['parameters']['securedAdmin'] ? Route::SECURED : '';
} else {
    $securedAdmin = '';	
}


$container->router[] =  new Route('login', array(
	'module' => 'Admin',
	'presenter' => 'Login',
	'action' => 'default'
),$securedAdmin);

$container->router[] =  new Route('admin/<presenter>/<action>[/<id>]', array(
	'module' => 'Admin',
	'presenter' => 'Homepage',
	'action' => 'default'
),$securedAdmin);

$container->router[] =  new Route('loginfe/<presenter>/<action>', array(
	'module' => 'Frontend',
	'presenter' => 'Login',
	'action' => 'default'
),$securedAdmin);

$entityManager = $container->getService('doctrine.entityManager');
$container->router[] = new WebCMS\SystemRouter($entityManager);

// Configure and run the application!
$container->application->run();
